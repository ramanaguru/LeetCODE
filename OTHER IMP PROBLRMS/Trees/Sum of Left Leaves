Problem Description

Given a binary tree, find and return the sum of node value of all left leaves in it.



Example Input

Input 1:

    3
   / \
  9  20
    /  \
   15   7
Input 2:

   1
  / \
 6   2
    /
   3


Example Output

Output 1:

 24
Output 2:

 9
 
 
 
 
 
 Code
 
 
 
 /**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public int solve(TreeNode A) {
       int sum = 0;

        if(A == null){
           return 0;
        }

        if(A.left != null){
            if(A.left.left == null && A.left.right == null){
                sum = A.left.val;
            }
            else{
                sum = sum + solve(A.left);
            }
        }


        sum = sum + solve(A.right);

        //You can use this also instead of line 73

        // if(A.right != null){  
        //     if(A.right.left != null ||  A.right.right != null){
        //         sum = sum + solve(A.right);
        //     }
           
        // }

        return sum;
    }
}
