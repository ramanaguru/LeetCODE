Problem Description

You are given the root node of a binary tree A. You have to find the number of nodes in this tree.

-----------------------------------------------------------------------

Example Input
Input 1:

 Values =  1 
          / \     
         4   3                        
Input 2:

 
 Values =  1      
          / \     
         4   3                       
        /         
       2                                     
-----------------------------------------------------------------------

Example Output
Output 1:

 3 
Output 2:

 4 


Example Explanation
Explanation 1:

Clearly, there are 3 nodes 1, 4 and 3.
Explanation 2:

Clearly, there are 4 nodes 1, 4, 3 and 2.



-----------------------------------------------------------------------


CODE

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public int solve(TreeNode A) {
        
        if(A == null){
            return 0;
        }
        
        int lh = solve(A.left);
        int rh = solve(A.right);

        return lh + rh + 1; //why +1 ? counting the head also

    }
}
