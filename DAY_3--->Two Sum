class Solution {
    public int[] twoSum(int[] nums, int target) {
    
    //method -1 (using HASHMAP)----> follow method -2 for more undserstanding:
    
    
        int n = nums.length;
        int arr[] = new int [2];
        HashMap <Integer,Integer>hm = new HashMap<>();

        int min, max, temp;

        min = -1;
        max = -1;

        for(int i =0; i < n; i++){
            if(hm.containsKey(target- nums[i])){
                min = i;
                max = hm.get(target-nums[i]);

            }
            else{
                hm.put(nums[i], i);
            }
        }

        if(min > max){
            temp = min;
            min = max;
            max = temp;
        }

        arr[0] = min;
        arr[1] = max;

        return arr;
        
        
        //method -2 (using HASHMAP)
        
        public int[] twoSum(int[] numbers, int target) {
        int[] result = new int[2];
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for (int i = 0; i < numbers.length; i++) {
           if (map.containsKey(target - numbers[i])) {
            result[1] = i;
            result[0] = map.get(target - numbers[i]);
            return result;
           }
           map.put(numbers[i], i);
       }
       return result;


        
    }
}
